on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.1' # The Go version to download (if necessary) and use.
      - name: Run build
        run: go build .
      - uses: "marvinpinto/action-automatic-releases@latest"
        id: create_release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: "README.md"
      - name: Print output
        run: |
          echo "Output automatic_release_tag ${{ steps.create_release.outputs.automatic_releases_tag }}"
          echo "Output upload_url ${{ steps.create_release.outputs.upload_url }}"
          echo "RELEASE_NAME=$( echo ${{ github.ref }} | grep -o 'v[{0-9}\.]*' )" >> $GITHUB_ENV
      - name: Upload asset to github release page
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./iamthat
          asset_name: aimthat-${{ env.RELEASE_NAME }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - uses: wangyoucao577/go-release-action@v1.20
        with:
          github_token: ${{ secrets.RELEASE_PAT }}
          goos: ${{ matrix.goos }}
          goarch: amd64
          binary_name: "iamthat"
          extra_files: README.md
